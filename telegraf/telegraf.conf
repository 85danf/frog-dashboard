[global_tags]

[agent]
  interval = "20s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

[[inputs.http]]
  urls = [
    "https://query1.finance.yahoo.com/v8/finance/chart/FROG?region=US&lang=en-US&includePrePost=false&interval=1m&range=1m&corsDomain=finance.yahoo.com&.tsrc=finance"
  ]
  method = "GET"
  timeout = "3s"
  headers = {"accept" = "application/json", "cache-control" = "no-cache", "pragma" = "no-cache", "user-agent" = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36", "origin" = "https://finance.yahoo.com", "referer" = "https://finance.yahoo.com/quote/FROG", "authority" = "query1.finance.yahoo.com"}
  data_format = "json"
  json_query = "{chart.result.0.meta.regularMarketPrice,chart.result.0.meta.symbol,chart.result.0.meta.currency}"
  json_name_key = "chart.result.0.meta.symbol"
  tag_keys = [
    "symbol",
    "currency"
  ]
  tagexclude = ["url","host"]

  [[inputs.http]]
  urls = [
    "https://query1.finance.yahoo.com/v8/finance/chart/USDILS=X?region=US&lang=en-US&includePrePost=false&interval=1m&range=1m&corsDomain=finance.yahoo.com&.tsrc=finance"
  ]
  method = "GET"
  timeout = "3s"
  headers = {"accept" = "application/json", "cache-control" = "no-cache", "pragma" = "no-cache", "user-agent" = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36", "origin" = "https://finance.yahoo.com", "referer" = "https://finance.yahoo.com/quote/usdils=x?ltr=1", "authority" = "query1.finance.yahoo.com"}
  data_format = "json"
  json_query = "{chart.result.0.meta.regularMarketPrice,chart.result.0.meta.symbol,chart.result.0.meta.currency}"
  json_name_key = "chart.result.0.meta.symbol"
  tag_keys = [
    "symbol",
    "currency"
  ]
  tagexclude = ["url","host"]

[[outputs.prometheus_client]]
  listen = ":9273"
  metric_version = 2
  path = "/metrics"
  expiration_interval = "20s"
  collectors_exclude = ["gocollector", "process"]

  # For Debug
  # [[outputs.file]]
  #  files = ["stdout"]
  #  data_format = "json"
  #  json_timestamp_units = "1s"